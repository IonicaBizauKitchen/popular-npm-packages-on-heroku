npm's [package.json](https://www.npmjs.org/doc/files/package.json.html) file is a wonderful thing. It tells you everything you need to know about an app or package: why it exists, how to use it, what its dependencies are, and so on. The npm registry and website provide useful information about these packages and their relationships to one another, but little is publicly known about how people are actually using them together to build web apps. As a platform upon which thousands of Node apps are deployed every day, Heroku is in a unique position to gather data about popular top-level npm dependencies and share it with the Javascript community.

Every time a Node app is deployed to Heroku, its package.json dependency data is anonymized and fed to a service for processing. What follows is a summary of the most popular npm dependencies in those web apps.

## The Top 20

{{#each top}}
### [{{name}}](https://npmjs.org/package/{{name}})

{{#if writeup}}{{{writeup}}}{{/if}}

{{#if homepage_text}}[{{homepage_text}}]({{homepage}}){{/if}}
{{/each}}


## The Top 100

The list below rounds out the top 100 npm dependencies. Seasoned Node developers will be familiar with many of the packages on this list, but hopefully there's a little something new for everyone.

{{#each the_rest}}
- [{{name}}](https://npmjs.org/package/{{name}}){{#if description}}: {{description}}{{/if}}
{{/each}}

## Choose Wisely

A word of caution: Just because a particular package is popular doesn't always make it the best choice for your purposes. The intent of this post is not to promote a particular collection of packages, but rather to publicize what packages are in popular use today on Heroku today, and help give you a sense of what's out there.

The list above is just scratching the surface of what's available in the npm registry, which has over [80,000 packages](https://www.npmjs.org/) to date, and shows no signs of slowing.

## Dog Fooding

This very blog post is the result of a human-computer collabortation aided in part by a handful of npm modules, some of which appear in the list above. You can find the source for this post on GitHub.

Here's to Javascript's open-source future. Happy hacking!
